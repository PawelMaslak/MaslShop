@using System.Data.SqlClient
@using System.Web.UI.WebControls
@model Maslshop.Models.ViewModels.Order.OrdersListViewModel

@{
    ViewBag.Title = Model.Heading;
}


<div id="view-account">
    <h1>Admin Panel</h1>
    <hr />
    <h2>List Of Orders</h2>
    <hr />
    <div class="row" style="margin: 0">
        @using (Html.BeginForm("SearchOrder", "Order"))
        {
            <div class="form-group" id="SearchBar">
                <div class="input-group pull-right" style="margin-bottom: 10px;" >
                    @Html.TextBoxFor(m => m.SearchTerm, new { @class = "form-control" })
                    <span class="input-group-btn">
                        <button type="submit" class="btn btn-primary" id="SearchButton-Admin">Search</button>
                    </span>
                </div>
            </div>
        }
    </div>

</div>

<div id="ProductsList" style="overflow-x: auto">
    <table id="table" class="table table-striped table-bordered text-center">
        <thead>
            <tr class="active text-info">
                <th>Id</th>
                <th>Order Date</th>
                <th>User Name</th>
                <th>Value</th>
                <th>Status</th>
                <th>Save Changes</th>
                <th>Edit</th>
            </tr>
        </thead>
        <tbody class="text-center">

            @foreach (var order in Model.Orders)
            {

                var statusList = Model.OrderStats.Select(x => new
                {
                    x.Id,
                    x.Status
                }).Where(x => x.Status != order.OrderStatusName).ToList();

                var status = Model.OrderStats.SingleOrDefault(i => i.Status == order.OrderStatusName);

                <tr>
                    <td>@order.OrderId</td>
                    <td>@($"{order.OrderDate:d}")</td>
                    <td>@order.UserName</td>
                    <td>@order.OrderTotal.ToString("C")</td>
                    <td>
                        @if (order.OrderStatusName == "Cancelled")
                        {
                        <span class="text-danger">@order.OrderStatusName</span>                            
                        }
                        else
                        {
                            @Html.DropDownListFor(m => order.StatusId, new SelectList(statusList, "Id", "Status"), @order.OrderStatusName, new { @class = "form-control", @id = order.OrderId })
                        }

                    </td>
                    <td>
                        <button type="submit" onclick="updateOrderStatus(@order.OrderId)" class="btn btn-primary glyphicon glyphicon-floppy-saved"></button>
                    </td>
                    <td><a href="@Url.Action("EditOrder", "Order", new {orderId = order.OrderId})" class="btn btn-primary glyphicon glyphicon-pencil" role="button"></a></td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    var updateOrderStatus = function(orderId) {
        var statusId = document.getElementById(orderId).value;

        var myUrl = '@Url.Action("UpdateOrderStatus", "Order")';

        $.ajax({
            url: myUrl,
            type: "GET",
            contentType: "application/json",
            data: { orderId: orderId, orderStatusId: statusId },
            success: alert("Changes have been saved!")
        });
    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#Button1').click(function () {
            location.reload();
        });
    });
</script>





